; // Default path: C:\Program Files (x86)\Steam\steamapps\common\Deadlock\game\citadel\cfg\autoexec.cfg
; // Launch options: +exec autoexec.cfg
; // Optional launch options: -dev -console -noassert -high -preload -novid

// Command                                  Value   Default Help
// cl_hud_telemetry_ping_show               1       1       [0, 2] (0: hidden, 1: only poor, 2: always) Show ping in the HUD
// cl_hud_telemetry_frametime_show          1       1       [0, 2] (0: hidden, 1: only poor, 2: always) Show frame time (FPS) in the HUD
// cl_hud_telemetry_net_detailed            0       0       [0, 2] (0: hidden, 1: only poor, 2: always) Show breakdown network misdelivery (loss, late delivery, and peak jitter)
// cl_hud_telemetry_net_misdelivery_show    1       1       [0, 2] (0: hidden, 1: only poor, 2: always) Show percentage of user commands & server snapshots that are missed due to network conditions
// cl_hud_telemetry_net_quality_graph_show	0       0       [0, 2] (0: hidden, 1: only poor, 2: always) Show packet jitter and netframe loss/reordering in the HUD
// cl_hud_telemetry_ping_poor               100     100     [0, n] (ms) Ping higher than this is considered 'poor'
// cl_hud_telemetry_frametime_poor          100     100     [0.0, n.n] (ms) Frame time greater than this is considered 'poor'
// cl_hud_telemetry_net_misdelivery_poor    5       5       [0, 100] Packet delivery anomaly rate higher than this is considered 'poor'

// Crosshair Commands                       Value   Default Help
// citadel_crosshair_color_b                255     255     [0, 255] Blue
// citadel_crosshair_color_g                0       255     [0, 255] Green
// citadel_crosshair_color_r                255     255     [0, 255] Red
// citadel_crosshair_dot_opacity            1       0.7     [0.0, 1.0] (%) Dot opacity
// citadel_crosshair_dot_outline_opacity    0       0.9     [0.0, 1.0] (%) Dot outline opacity
// citadel_crosshair_hit_marker_duration    0.1     0.1     [0.0, n.n] (sec) Hit marker duration
// citadel_crosshair_pip_border             false   true    [true|false] Crosshair pip border
// citadel_crosshair_pip_gap                0       3       [0, n] (px?) Crosshair pip gap
// citadel_crosshair_pip_gap_static         false   false   [true|false] Static crosshair pip gap
// citadel_crosshair_pip_height             2       16      [0, n] (px?) Crosshair pip height
// citadel_crosshair_pip_width              2       4       [0, n] (px?) Crossair pip width
// citadel_crosshair_pip_opacity            0       0.4     [0.0, 1.0] (%) Crosshair pip opacity

// Text Customization Commands                  Value   Default Help
// citadel_damage_text_lifetime                 1.5     1.5     [0.0, n.n] (sec) Damage number visibility lifetime
// citadel_damage_text_batching_window_ability  1.05    1.05    [0.00, n.nn] (sec) Combine ability damages within this window
// citadel_damage_text_batching_window_bullet   1.05    1.05    [0.00, n.nn] (sec) Combine bullet damages within this window
// citadel_damage_text_distance_far             4000    4000    [0, n] (m) Minimun distance to use far offsets in damage numbers
// citadel_damage_text_distance_near            100     100     [0, n] (m) Maximum distance to use near offsets in damage numbers
// citadel_damage_text_height_offset_far        200     200     [-n, n] (px?) Vertical offset for far away damage numbers
// citadel_damage_text_x_offset_far             20      0       [-n, n] (px?) Horizontal offset for far away damage numbers
// citadel_damage_text_height_offset_near       110     130     [-n, n] (px?) Vertical offset for nearby damage numbers
// citadel_damage_text_x_offset_near            10      0       [-n, n] (px?) Horizontal offset for nearby damage numbers
// citadel_gold_text_height_offset              35      35      [-n, n] (px?) Vertical offset for gold numbers

// FYI:
// citadel_give_gold <amount>                       Give gold to all players
// citadel_give_player_gold <player name> <gold>    Give gold to the specified player
// cl_showfps[0,4] (0: Hidden, 1: FPS, 2: Smoothed FPS, 3: Server MS(?), 4: FPS & Log to file) Draw fps meter at top of screen
// [Console] showconsole                                                                                    Show the console.
// [Console] screenmessage_show                             -1                 cheat                        Enable display of console messages on screen. 1 = Enabled, 0 = Disabled, -1 = Enabled if vgui is not present
// [Console] sv_pure                                                                                        Show user data.
// [Console] toggleconsole                                                                                  Show/hide the console.
//[Console] net_channels                                                                                   Shows net channel info
//[Console] net_showudp                                    false                                           Dump UDP packets summary to console
//[Console] net_showudp_remoteonly                         true                                            Dump non-loopback udp only
//[Console] net_status                                                                                     Shows current network status
// [Console] hostname_in_client_status                      false                                           Show server hostname in client status.
//[Console] cl_ragdoll_limit                               0        20        client archive               Maximum number of ragdolls to show (-1 disables limit)
//[Console] cl_showents                                                       client cheat                 Dump entity list to console.
//[Console] cl_showerror                                   0                  client                       Show prediction errors, 2 for above plus detailed field deltas, 3 to filter out serverside known prediction errors, -entindex for specific entity.
//[Console] cl_showfps                                     0                  client                       Draw fps meter at top of screen (1 = fps, 2 = smooth fps, 3 = server MS, 4 = Show FPS and Log to file )
//[Console] cl_showmem                                     0                  client                       Draw approximate memory use at top of screen
//[Console] cl_showpos                                     0                  client cheat                 Draw current position at top of screen
//[Console] cvarlist                                                                                       Show the list of convars/concommands.
//[Console] debugoverlay_show_text_outline                 false              cheat                        Toggle display of box around text
//[Console] differences                                                                                    Show all convars which are not at their default values (optional restricted to specific flags).
//[Console] citadel_show_account_ids                       false              client                       When set, account IDs will be shown on player tooltips
//[Console] citadel_show_average_rating_on_postgame        false              client archive               Show the rating average rating of a team in the post game.
//[Console] citadel_show_bullet_lag_compensation           0                  game client cheat replicated if > 0.0, show lag compensated hitboxes (value is seconds) whenever a bullet is lag compensated and hits something.
//[Console] citadel_show_debug_db_controls                 false              client archive               Show beta db controls in the upper left corner
//[Console] citadel_show_global_leaderboard                false              client                       Show Global Leaderboards
//[Console] citadel_show_hero_lab_heroes                   true     false     client archive               Show Hero Labs Heroes in hero grid
//[Console] citadel_show_npe_bots_modal                    true               client archive               Show the NPE Bots modal when navigating to the bots page.
//[Console] citadel_show_npe_modal                         false    true      client archive               Show the NPE modal when navigating to the roster page.
//[Console] citadel_show_rating_notification_on_change     false              client archive               Show the rating notification on the post game if your rating changed that game.
//[Console] citadel_show_telemetry_settings                false              client                       Show HUD Telemetry Settings.
//[Console] citadel_item_used_text_height_offset           25                 client archive               How much higher item used text show up.
//[Console] citadel_deny_text_height_offset                35                 client archive               How much higher should deny text show up.
//[Console] citadel_deny_text_max_distance                 4000               client archive               How far away before we stop showing in world deny events.
//[Console] cc_delay_time                                  0.25               client archive               Close caption delay before showing caption.
//[Console] cc_subtitles                                   false              client archive               If set, don't show sound effect captions, just voice overs (i.e., won't help hearing impaired players).

//[Console] cl_fullupdate                                                                 cheat                                         Force uncompressed update
//[Console] cl_glow_brightness                                          1                 client cheat                                  Brightness of player halos
//[Console] cl_glow_item_far_b                                          1                 client
//[Console] cl_glow_item_far_g                                          0.4               client
//[Console] cl_glow_item_far_r                                          0.3               client

//[Console] cl_error_report_time                                        0                 client                                        Minimum time in seconds that must elapse before printing prediction error summary. 0 to disable.
//[Console] cl_extrapolate                                              true              client cheat                                  Enable/disable extrapolation if interpolation history runs out.
//[Console] cl_extrapolate_amount                                       0.25              client cheat                                  Set how many seconds the client will extrapolate entities for.

//[Console] cl_input_enable_raw_keyboard                                false                                                           Enable raw keyboard input
//[Console] cl_interp                                                                     client                                        Read the effective client simulation interpolation amount in terms of time.
//[Console] cl_interp_hermite                                           true              client cheat                                  Set to zero do disable hermite interpolation.
//[Console] cl_interp_ratio                                             1       0         client userinfo                               Sets the client simulation interpolation amount, in terms of server updates (final amount is cl_interp_ratio / cl_updaterate).
//[Console] cl_interpolate_report                                       false             client archive                                Enable to show interpolation profile timing

//[Console] cl_network_quality2                                         -1                client archive
//[Console] cl_poll_network_early                                       false                                                           Enable polling for network messages every frame, instead of every tick
//[Console] cl_showerror                                                0                 client                                        Show prediction errors, 2 for above plus detailed field deltas, 3 to filter out serverside known prediction errors, -entindex for specific entity.

//[Console] cl_tickpacket_desired_queuelength                           1                 userinfo                                      This value, multiplied by the tick interval, is added to cl_tickpacket_recvmargin_desired to obtain the effective desired recv margin.
//[Console] cl_tickpacket_recvmargin_spew_interval                      0
//[Console] cl_ticks_net_print_threshold                                2                                                               Print a message if network issues cause problems with server snapshots of user commands not being available when needed, if the percentage (0...100) exceeds this value.  A value of 0 will cause the message to always print each time it is calculated
//[Console] cl_ticks_warning_level                                      0                                                               Print a message about problems with ticks and interpolation.  0=never, 1=warnings, 2=all, even if hidden by interpolation
//[Console] cl_ticktiming                                                                                                               {print|<interval>} [summary|detail]  Print timing stats now, or set report interval
//[Console] cl_timeout                                                  30                archive                                       After this many seconds without receiving a packet from the server, the client will disconnect itself
//[Console] cl_updaterate                                               64      20        client archive userinfo                       Number of packets per second of updates you are requesting from the server
//[Console] cl_usercmd_max_per_movemsg                                  4                                                               max number of CUserCmds to send in one client move message

// [Console] cl_debug_overlays_broadcast                                 false                                                           Render debug overlays from server.
//[Console] cl_cq_min_queue                                             1       0         userinfo                                      Used by the client to inform the server of their desired queue length.  Derived from cl_tickpacket_recvmargin_desired and cl_tickpacket_desired_queuelength
//[Console] cl_citadel_zoom_is_toggle                                   false             client archive userinfo

citadel_show_account_ids true;                      // [true|false] (default: false) When set, account IDs will be shown on player tooltips (?)
citadel_show_average_rating_on_postgame true;       // [true|false] (default: false) Show the rating average rating of a team in the post game
citadel_show_rating_notification_on_change true;    // [true|false] (default: false) Show the rating notification on the post game if your rating changed that game
citadel_show_telemetry_settings true;               // [true|false] (default: false) Show HUD Telemetry Settings (?)
hostname_in_client_status true;                     // [true|false] (default: false) Show server hostname in client status

// Minimap Commands                         Description
citadel_minimap_unit_click_radius 200;      // [0, n] (default: 800) (px?) "makes pinging more accurate on minimap ?"
citadel_minimap_max_icon_shrink 0.7;        // [0.0, n.n] (default: 0.8) (%?) "different minimap icon sizes when clustered ?"
citadel_minimap_player_width 6.5;           // [0.0, n.n] (default: 8) (px?) "different minimap icon sizes overall ?"
citadel_minimap_overlap_scan_distance 10;   // [0, n] (default: 20) (px?) "Distance until minimap icon sizes begin to shrink ?"
citadel_minimap_zip_line_thickness 2;       // [0, n] (default: 6) (px?) Zipline thicknesses on minimap
minimap_update_rate_hz 60;                  // [1, n] (default: 5) (hz) Minimap update rate
citadel_unit_status_use_new true;           // [true|false] (default: false, false: old & big, true: new & sleek) Health bar style

m_rawinput 1;
engine_low_latency_sleep_after_client_tick true;
// zoom_sensitivity_ratio "0.818933027098955175"; // 1:1 ADS
// cL_lagcompensation true; // [true|false] (default: ?) Perform server side lag compensation of weapon firing events
// cl_ragdoll_limit 0; // "Maximum number of ragdolls to show (-1 unlimited)"
// cl_tickpacket_desired_queuelength 1; // "This value, multiplied by the tick interval, is added to cl_tickpacket_recvmargin_desired to obtain the effective desired recv margin."

// Preferrably set fps_max to unlimited and use GPU driver settings to limit the FPS for more stable frametimes.
// e.g. for 240Hz G-SYNC monitor & NVIDIA GPU:
//  Program: C:\Program Files (x86)\Steam\SteamApps\Common\Deadlock\Game\Bin\Win64\project8.exe
//  Low Latency Mode: Ultra, Max Frame Rate: 220 FPS, Monitor Technology: G-SYNC,
//  Power management mode: Prefer maximum performance, Preferred refresh rate: Highest available, Vertical sync: On
fps_max 0;          // [0, n] (default: ?, 0: unlimited) Sets the maximum frame rate for the in-game
fps_max_tools 120;  // [0, n] (default: ?, 0: unlimited) Sets an additional frame rate limit while in tools mode and when a window other than the game window has focus
fps_max_ui 120;     // [0, n] (default: ?, 0: unlimited) Sets the maximum frame rate for the game UI

// r_low_latency 1;
// engine_low_latency_sleep_after_client_tick false; // "When r_low_latency is enabled, this moves the low latency sleep on tick frames to happen after client simulation."
// r_drawtracers_firstperson false; // "Toggle visibility of first person weapon tracers"

// cl_interp_ratio 1; // "Sets the client simulation interpolation amount, in terms of server updates (final amount is cl_interp_ratio / cl_updaterate)."
rate 1000000; // [98304, 1000000?] (default: 786432) (bytes/sec) Maximum stable download speed, 1000000 byte/sec equals to 8Mbps.
cl_updaterate 128; // [n?, n?] (default: n) "Number of packets per second of updates you are requesting from the server"

// r_flush_on_pooled_ib_resize false; // "No comments"
// r_smooth_morph_normals false; // "No comments"
// sv_networkvar_validate false; // "Validate each StateChanged against known offsets."
// sv_networkvar_perfieldtracking false; // "Track individual field offset changes, rather than a single dirty flag for the whole entity."

host_writeconfig; // Applies above configurations into the game's default configuration files, preventing the game from overriding the configurations provided here.
echo "[AUTOEXEC] OK - Applied AutoExec.cfg";
